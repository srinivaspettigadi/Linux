#!/bin/bash

# Initialize variables
output_file="suppression_list.txt"
next_token=""

# Loop to fetch and append results until NextToken is empty
while true; do
  # List suppressed destinations
  result=$(aws ses list-suppressed-destinations --next-token "$next_token")

  # Extract the suppression entries and append to the output file
  echo "$result" | jq -r '.SuppressedDestinationSummaries[] | .EmailAddress' >> "$output_file"

  # Check if there is a NextToken for pagination
  next_token=$(echo "$result" | jq -r '.NextToken')

  # If NextToken is empty, exit the loop
  if [ -z "$next_token" ]; then
    break
  fi
done

echo "Suppression list downloaded to $output_file"










import boto3

# AWS SES client
ses_client = boto3.client('ses', region_name='YOUR_REGION_NAME')

# Pagination token to fetch all records
next_token = None
suppression_list = []

# Number of records you want to fetch (in your case, 20,000)
max_records = 20000

while len(suppression_list) < max_records:
    # Fetch a batch of suppression list records
    response = ses_client.list_suppressed_destinations(
        MaxItems=100,  # Maximum items per request (can be adjusted)
        NextToken=next_token
    )
    
    # Add the batch to the suppression list
    suppression_list.extend(response.get('SuppressedDestinations', []))
    
    # Check if there are more records to fetch
    next_token = response.get('NextToken')
    
    if not next_token:
        break

# At this point, suppression_list contains all the records
# Now, you can process or export this data as needed.













import boto3

# AWS SES client
ses_client = boto3.client('ses', region_name='YOUR_REGION_NAME')

# Pagination token to fetch all records
next_token = None
suppression_list = []

# Number of records you want to fetch (in your case, 20,000)
max_records = 20000

while len(suppression_list) < max_records:
    # Fetch a batch of suppressed email addresses
    response = ses_client.list_suppressed_email_addresses(
        MaxItems=100,  # Maximum items per request (can be adjusted)
        NextToken=next_token
    )
    
    # Add the batch to the suppression list
    suppression_list.extend(response.get('SuppressedAddresses', []))
    
    # Check if there are more records to fetch
    next_token = response.get('NextToken')
    
    if not next_token:
        break

# At this point, suppression_list contains all the records
# Now, you can process or export this data as needed.

